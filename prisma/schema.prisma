// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Bab {
  id        String   @id @default(uuid())
  number    Int
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  subBab    SubBab[]
  lesson    Lesson[]
}

model SubBab {
  id        String   @id @default(uuid())
  number    Int
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  babId     String
  bab       Bab      @relation(fields: [babId], references: [id])
  Lesson    Lesson[]
}

model Lesson {
  id        String     @id @default(uuid())
  number    Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  babId     String
  subBabId  String
  subBab    SubBab     @relation(fields: [subBabId], references: [id])
  bab       Bab        @relation(fields: [babId], references: [id])
  question  Question[]
}

model Question {
  id        String   @id @default(uuid())
  number    Int
  question  String
  score     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lessonId  String
  lesson    Lesson   @relation(fields: [lessonId], references: [id])
  answer    Answer[]
}

model Answer {
  id         String   @id @default(uuid())
  answer     String
  isCorrect  Boolean
  questionId String
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
}
